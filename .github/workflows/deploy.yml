name: Deploy to EC

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

    - name: Install PHP and dependencies
      run: sudo apt-get update && sudo apt-get install php php-mbstring php-xml

    - name: Echo Environment Variables to .env
      run: |
        echo "APP_NAME=Laravel" > .env
        echo "APP_ENV=local" >> .env
        echo "APP_KEY=" >> .env
        echo "APP_DEBUG=true" >> .env
        echo "APP_URL=${{ secrets.APP_URL }}" >> .env

        echo "LOG_CHANNEL=stack" >> .env
        echo "LOG_DEPRECATIONS_CHANNEL=null" >> .env
        echo "LOG_LEVEL=debug" >> .env

        echo "DB_CONNECTION=pgsql" >> .env
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
        echo "DB_PORT=5432" >> .env
        echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env

        echo "BROADCAST_DRIVER=log" >> .env
        echo "CACHE_DRIVER=file" >> .env
        echo "FILESYSTEM_DISK=local" >> .env
        echo "QUEUE_CONNECTION=sync" >> .env
        echo "SESSION_DRIVER=file" >> .env
        echo "SESSION_LIFETIME=120" >> .env

        echo "MEMCACHED_HOST=127.0.0.1" >> .env

        echo "REDIS_HOST=127.0.0.1" >> .env
        echo "REDIS_PASSWORD=null" >> .env
        echo "REDIS_PORT=6379" >> .env

        echo "MAIL_MAILER=smtp" >> .env
        echo "MAIL_HOST=mailpit" >> .env
        echo "MAIL_PORT=1025" >> .env
        echo "MAIL_USERNAME=null" >> .env
        echo "MAIL_PASSWORD=null" >> .env
        echo "MAIL_ENCRYPTION=null" >> .env
        echo 'MAIL_FROM_ADDRESS="hello@example.com"' >> .env
        echo "MAIL_FROM_NAME=\${APP_NAME}" >> .env

        echo "AWS_ACCESS_KEY_ID=" >> .env
        echo "AWS_SECRET_ACCESS_KEY=" >> .env
        echo "AWS_DEFAULT_REGION=us-east-1" >> .env
        echo "AWS_BUCKET=" >> .env
        echo "AWS_USE_PATH_STYLE_ENDPOINT=false" >> .env

        echo "PUSHER_APP_ID=" >> .env
        echo "PUSHER_APP_KEY=" >> .env
        echo "PUSHER_APP_SECRET=" >> .env
        echo "PUSHER_HOST=" >> .env
        echo "PUSHER_PORT=443" >> .env
        echo "PUSHER_SCHEME=https" >> .env
        echo "PUSHER_APP_CLUSTER=mt1" >> .env

        echo "VITE_APP_NAME=\${APP_NAME}" >> .env
        echo "VITE_PUSHER_APP_KEY=\${PUSHER_APP_KEY}" >> .env
        echo "VITE_PUSHER_HOST=\${PUSHER_HOST}" >> .env
        echo "VITE_PUSHER_PORT=\${PUSHER_PORT}" >> .env
        echo "VITE_PUSHER_SCHEME=\${PUSHER_SCHEME}" >> .env
        echo "VITE_PUSHER_APP_CLUSTER=\${PUSHER_APP_CLUSTER}" >> .env
    
    - name: Install Composer dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Deploy to EC2
      run: |
        rsync -avz --delete --exclude-from=".gitignore" -e "ssh -i ~/.ssh/id_rsa" ./ ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/var/www/paystride/
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'sudo chown -R ubuntu:ubuntu /var/www && cd /var/www/paystride/ && composer install --no-interaction --prefer-dist --optimize-autoloader && php artisan migrate --force && php artisan key:generate && php artisan config:cache && php artisan route:cache && sudo chown -R www-data.www-data /var/www/paystride/storage'

    - name: Clear SSH key
      run: rm ~/.ssh/id_rsa
